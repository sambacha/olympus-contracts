name: Slither Analysis
on: [pull_request]
jobs:
    analyze:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            # We receive an EACCESS permission denied error if we leave dependency installation
            # to the slither action
            - name: Install dependencies
              run: yarn install --frozen-lockfile
            - uses: crytic/slither-action@v0.1.1
              name: Perform Slither Analysis
              id: slither
              continue-on-error: true
              with:
                  sarif: results.sarif
     - name: Run analysis
        id: analysis
        shell: bash
        run: |
          slither . --json-types compilations,console,detectors,printers,list-detectors,list-printers --exclude-dependencies --compile-force-framework hardhat >>.github/slither-output/slither_report.txt 2>&1 || true
          echo ::set-output name=SLITHER_COVERAGE::
        # @dev Alt. CI Coverage process
        # FOUND_WARNINGS = SLITHER_COVERAGE
        # $(node check-slither-coverage.js echo 'coverage-slither-change')
        # @dev Slither Coverage example
        # more complicated example
        # slither --exclude=divide-before-multiply,unused-return,timestamp,naming-convention,pragma,solc-version,external-function,reentrancy-benign,reentrancy-no-eth,arbitrary-send,incorrect-equality,reentrancy-events,assembly,uninitialized-local --filter-paths="@openzeppelin|WETH9.sol|uniswapV2"
      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        id: artifact
        with:
          name: slither-report
          path: .github/slither-output/slither_report.txt
      - name: Check status
        id: coverage
        shell: bash
        run: |
          FALSE_POSITIVE_WARNINGS=7
          # Highlight Coverage Status via Color coding
          FOUND_WARNINGS=$(grep "\d+ result" -Po .github/slither-output/slither_report.txt | sed 's/ result//g')
          if (( $(echo "$FOUND_WARNINGS <= 50" | bc -l) )) ; then
            COLOR=red
          elif (( $(echo "$FOUND_WARNINGS > 80" | bc -l) )); then
            COLOR=green
          else
            COLOR=orange
          fi
          # Create Coverage Badge
          # shellcheck disable=SC2154
          curl -sL curl "https://img.shields.io/badge/slither-$FOUND_WARNINGS%25-$COLOR" > badge.svg
          # example badge: https://img.shields.io/badge/slither-80%25-orange
          # output Slither Findings 
          echo "::group::Slither Analysis Report"
          echo "Slither Analysis $FOUND_WARNINGS issues"
          if [[ $FOUND_WARNINGS -gt $FALSE_POSITIVE_WARNINGS ]]; then echo "$FOUND_WARNINGS issues exceeds limit" >&2; exit 0; fi
          echo "::endgroup::"
          
        - name: Upload SARIF file
          uses: github/codeql-action/upload-sarif@v1
          with:
              sarif_file: ${{ steps.slither.outputs.sarif }}
